#include "Header.nxc"

bool scanningLeft =true;
bool scanningRight=false;
int ownGoal=0;         //represents heading for direction of team's own goal.
int currentCompass=0;  //current compass value
int relBearing=0;      //difference between the goal and current compass values
mutex moveMutex;

task main() {
     //Initialize Sensors
     SetSensorLowspeed(COLOR);
     SetSensorLowspeed(COMPASS);
     //SetSensorLowspeed(ULTRASONIC);
     SetSensorTouch(TOUCH);
     ClearSensor(ULTRASONIC);

     ownGoal = SensorHTCompass(COMPASS);
     Wait(100);  //small delay while setting ownGoal
     
     //First we throw the balls in the containers
     containBalls();
     
     //Then we go to predefined position to grab 2 balls in our side
     goToPredefined();
     
     //We off motors to make sure the robot stands still now
     Off(motors);

     //Start usual scanning process
     Precedes (scanningArenaLeft,reading,scanningArenaRight);
}

//return angle-difference (<=180) between 2 angles
int getDegreeDiff(int current, int old)
{
    int diff=abs(current-old);
    if (diff>180)
               diff=360-diff;
    return diff;
}

//rotate the robot to goal heading
sub backtoOrigin()
{
      while (relBearing>5)
      {
              reverseDirection(100);
              currentCompass = SensorHTCompass(COMPASS);
			  //Difference between the original heading (opponent camp and our new heading)
              relBearing = abs(currentCompass-ownGoal);
       }
       Off(motors);
}

//rotate 90 degrees from current heading in opposite direction
sub turnAway(int moveTime)
{
    if (scanningLeft)
    {
         RotateMotor(RMotor, -MOVMENT_SPEED, 405);
         Wait( moveTime);
    }
    else
    {
         RotateMotor(LMotor, -MOVMENT_SPEED, 405);
         Wait( moveTime);
    }
}

sub throwBall()
{
  //move backward
  OnRevSync (motors,MOVMENT_SPEED+20,OUT_REGMODE_SPEED);
  Wait(1200);
  Off(motors);
  
  //close grabber
  close();
  
  //move forward
  OnFwdSync (motors,100,OUT_REGMODE_SPEED);
  Wait (900);
  
  //open grabber
  open(180);
  
  //stop motors and rotor
  Off(motors);
  stopRotor();
}

//return object color read from ColorSensor
byte getObjColor()
{
     byte r,g,b;
     byte output=0;

     ReadSensorHTColor(COLOR,output,r,g,b);
     return output;
}

//return true if detect sth is not ball(2/9) and not field (17/0)
bool isNotField()
{
     byte output=getObjColor();
	 //2=blue,9=red,17=white,0=black
	 //It's automatically either the enemy or the wall
     return ((output!=2) && (output!=9) && (output!=17) &&(output!=0));
}

//stabilize the robot before throwing and throw
bool checkandthrow()
{
     byte output=getObjColor();
     if(output==9||output==2)
     {
                 //grab ball
                 close();
                 
                 //adjust heading
                 backtoOrigin();
                 
                 //open grabber
                 open(15);
        				 Wait(800);
        				 open(165);
        				 
        				 //throw ball
                 throwBall();
                 return true;
      }
      return false;
}

//move toward object until too close
//or facing sth different from the field or balls
bool moveTowardObj()
{
    OnFwdSync(OUT_AC,MOVMENT_SPEED,OUT_REGMODE_SPEED);
    bool meetWall=false;
    while (true)
    {
          ClearSensor(ULTRASONIC);
          meetWall=isNotField();
          if((SensorUS (ULTRASONIC) <= THRESHOLD) || (meetWall))
          {
            Off(motors);
            break;
          }
     
    }
    if(meetWall)
    {
                return false;
    }
    else
    {
        return true;
    }

}

//change scanning direction
sub changeDirection()
{
	scanningLeft=scanningRight;
	scanningRight=!scanningLeft;
}

sub moveFwd(int moveTime)
{
     OnFwdSync(OUT_AC,MOVMENT_SPEED,OUT_REGMODE_SYNC);
     Wait(moveTime);
     Off(motors);
}
sub moveBwd(int moveTime)
{
     OnRevSync(OUT_AC,MOVMENT_SPEED,OUT_REGMODE_SYNC);
     Wait(moveTime);
     Off(motors);
}

//reverse direction when scanning right or left
sub reverseDirection(int moveTime)
{
         if (scanningRight)
         {
            OnFwd(RMotor, SCANNING_SPEED);
            OnRev(LMotor, SCANNING_SPEED);
         }
         else
         {
             OnFwd(LMotor, SCANNING_SPEED);
             OnRev(RMotor, SCANNING_SPEED);
         }
         Wait(moveTime);
}

//check corners for backside
bool checkWallBack()
{
    if(Sensor(TOUCH)==1)
    {
     return true;
    }
    return false;
}
//Scan fields start Left then right looking for balls
task reading(){
     while(true){
            //stop rotating the wheels before check
            Acquire(moveMutex);

            currentCompass = SensorHTCompass(COMPASS);

            ClearScreen();
            TextOut(10,LCD_LINE1,"Goal at:" );
            NumOut(10,LCD_LINE2,ownGoal);
            
            TextOut(10,LCD_LINE3,"Current at:" );
            NumOut(10,LCD_LINE4,currentCompass);
            
            relBearing = getDegreeDiff(currentCompass,ownGoal);
            TextOut(10,LCD_LINE5,"Relative reading" );
            NumOut(10,LCD_LINE6,relBearing);

            //if we are not bumping to anything in the back
            if(checkWallBack()==false)
            {
              if(relBearing <75)
              {
         		     ClearSensor(ULTRASONIC);

                //if find out something
                 if(SensorUS (ULTRASONIC) <= WALLDIST)
                 {
                           Off(motors);
                           
                           //move towards that thing
                           bool grab=moveTowardObj();
                           
                           //if we can approach it then try to throw it
                           if(grab)
                           {
                                grab=checkandthrow();
                           }

                           //if it is not a ball then rotate back and start scanning right
                           if(!grab)
                           {
                                  //move away from the object
                                  moveBwd(5000);
                                  
                                  //rotate 180 degree from it
                                  if(scanningRight)
                               	  {
                                           RotateMotor(RMotor, MOVMENT_SPEED, 810);
                                           Off(motors);
                                  }
                                  else
                                  {
                                        RotateMotor(LMotor, MOVMENT_SPEED, 810);
                                        Off(motors);
                                  }
                                  
                                  //then change the direction
                                  changeDirection();
                           }

                  }
              }
              else //we pass the maximum scanning degree
              {
                  if (scanningRight)
                  {
                     backtoOrigin();
                     moveFwd(1000);
                  }
                  changeDirection();

                  //leave some time for the direction to change
                  Release(moveMutex);
                  Wait(1000);
                  Acquire(moveMutex);
              }
            }
            //case we are bumping to sth in the back
            else
            {
                //move forward for a while
                moveFwd(4000);

                //adjust heading towards goal
                backtoOrigin();
                
                Off(motors);

            }
            //return right to scanning tasks
            Release(moveMutex);
     }

}

sub containBalls()
{
  //turn left a little
  RotateMotor(RMotor, MOVMENT_SPEED, 50);
  Off(motors);

  //throw 2 balls
  close();
  stopRotor();
  
  //turn right a little
  RotateMotor(LMotor, MOVMENT_SPEED, 50);
  Off(motors);
  
  //get grabber ready
  open(180);
  stopRotor();
  Wait(1000);

  //stay back a little
  moveBwd(200);
}

sub goToPredefined()
{
      SetSensorLowspeed(ULTRASONIC);
      ClearSensor(ULTRASONIC);

      //rotate 90 degree to the left
      RotateMotor(LMotor, -MOVMENT_SPEED, 405);
	    Off(motors);

      ClearSensor(ULTRASONIC);
	    Wait(500);
	    
	    //move forward till we face the wall at 25 cm
      OnFwdSync(OUT_AC,MOVMENT_SPEED,OUT_REGMODE_SYNC);
      until(SensorUS (ULTRASONIC) <= 25);
      Off(motors);
      
      //rotate 90 degree to the right
      RotateMotor(LMotor, MOVMENT_SPEED, 405);
      Off(motors);
      
      //move forward till we see the ball
      OnFwdSync(OUT_AC,MOVMENT_SPEED,OUT_REGMODE_SYNC);
      until (SensorUS (ULTRASONIC) <= THRESHOLD);
      Off(motors);
      
      //throw 1st ball
      close();
      stopRotor();
      open(15);
      stopRotor();
      open(165);
      stopRotor();
      throwBall();

      //adjust the direction
      Off(motors);
      Wait(500);

      RotateMotor(RMotor, MOVMENT_SPEED, 50);
      Off(motors);
      
      //go backwards till meet wall
      OnRevSync(OUT_AC,MOVMENT_SPEED,OUT_REGMODE_SYNC);
      while(1)
      {
        if(Sensor(TOUCH)== 1)
        {
            break;
        }
      }
      Off(motors);
      
      //repeat for ball on the right
      RotateMotor(LMotor, MOVMENT_SPEED, 405);
      Off(motors);

	    ClearSensor(ULTRASONIC);
      Wait(500);
	  
      OnFwdSync(OUT_AC,MOVMENT_SPEED,OUT_REGMODE_SYNC);
      until (SensorUS (ULTRASONIC) <= 25);
      Off(motors);

      RotateMotor(RMotor, MOVMENT_SPEED, 405);
      Off(motors);

      OnFwdSync(OUT_AC,MOVMENT_SPEED,OUT_REGMODE_SYNC);
      until (SensorUS (ULTRASONIC) <= THRESHOLD);
      Off(motors);

      close();
      stopRotor();
      open(15);
      stopRotor();
      open(165);
      stopRotor();
      throwBall();
      Off(motors);
      
}
//scan to the left, rotation
task scanningArenaLeft()
{
 while(true)
 {
           until(scanningLeft);
           Acquire(moveMutex);

           OnRev(LMotor, SCANNING_SPEED);
           OnFwd(RMotor, SCANNING_SPEED);
           Wait(100);

           Release(moveMutex);
 }
}
//scan to the right, rotation
task scanningArenaRight()
{
 while(true)
 {
         until(scanningRight);
         Acquire(moveMutex);
         
         OnRev(RMotor, SCANNING_SPEED);
	       OnFwd(LMotor, SCANNING_SPEED);
	       Wait(100);

         Release(moveMutex);
  }
}
